from django.db import models
from django.urls import reverse
from django.contrib.auth.models import User


class Category(models.Model):
    """–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    title = models.CharField(max_length=100, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ')
    icon = models.ImageField(upload_to='icons/', null=True, blank=True, verbose_name='–ò–∫–æ–Ω–∫–∞')
    slug = models.SlugField(unique=True, null=True, verbose_name='–°–ª–∞–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')
    parent = models.ForeignKey('self', on_delete=models.CASCADE, null=True, blank=True,
                               verbose_name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è', related_name='subcategories')

    def get_absolute_url(self):
        return reverse('category', kwargs={'slug': self.slug})

    def get_icon(self):
        if self.icon:
            return self.icon.url
        else:
            return 'üò•'

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = '–∫–∞—Ç–µ–≥–æ—Ä–∏—é'
        verbose_name_plural = '–∫–∞—Ç–µ–≥–æ—Ä–∏–∏'


class Product(models.Model):
    """–î–µ—Ç–∞–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    title = models.CharField(max_length=150, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ')
    price = models.IntegerField(default=0, verbose_name='–¶–µ–Ω–∞')
    quantity = models.IntegerField(default=0, verbose_name='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ')
    color_name = models.CharField(max_length=30, verbose_name='–¶–≤–µ—Ç')
    color_code = models.CharField(max_length=10, verbose_name='–ö–æ–¥ —Ü–≤–µ—Ç–∞')
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è')
    updated_at = models.DateTimeField(auto_now=True, verbose_name='–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è')
    slug = models.SlugField(unique=True, null=True, verbose_name='–°–ª–∞–≥ –ø—Ä–æ–¥—É–∫—Ç–∞')
    category = models.ForeignKey(Category, on_delete=models.SET_NULL, null=True, blank=True, related_name='products',
                                 verbose_name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è')
    model = models.ForeignKey('Model', on_delete=models.CASCADE, related_name='models', verbose_name='–ú–æ–¥–µ–ª—å')
    series = models.ForeignKey('Series', null=True, blank=True, on_delete=models.CASCADE, related_name='model_series',
                               verbose_name='–°–µ—Ä–∏—è')
    discount = models.IntegerField(null=True, blank=True, verbose_name='–°–∫–∏–¥–∫–∞')

    def get_absolute_url(self):
        return reverse('product', kwargs={'slug': self.slug})

    # –ü–æ–ª—É—á–∞–µ–º images –∏ first(), –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ related_name
    def get_photo(self):
        if self.images:
            return self.images.first().image.url
        else:
            return '-'

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = '–ø—Ä–æ–¥—É–∫—Ç'
        verbose_name_plural = '–ø—Ä–æ–¥—É–∫—Ç—ã'


class ProductImage(models.Model):
    """–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤"""
    image = models.ImageField(upload_to='images/', null=True, blank=True, verbose_name='–§–æ—Ç–æ –ø—Ä–æ–¥—É–∫—Ç–∞')
    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='images', verbose_name='–ü—Ä–æ–¥—É–∫—Ç')
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è')

    def __str__(self):
        return self.product.title

    class Meta:
        verbose_name = '—Ñ–æ—Ç–æ'
        verbose_name_plural = '—Ñ–æ—Ç–æ'


class Model(models.Model):
    """–ú–æ–¥–µ–ª—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    title = models.CharField(max_length=150, verbose_name='–ú–æ–¥–µ–ª—å')
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è')

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = '–º–æ–¥–µ–ª—å'
        verbose_name_plural = '–º–æ–¥–µ–ª–∏'


class Spec(models.Model):
    """–ú–æ–¥–µ–ª—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ö–õ–Æ–ß"""
    title = models.CharField(max_length=100, verbose_name='–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞')
    category = models.ForeignKey(Category, on_delete=models.CASCADE, related_name='spec_keys', verbose_name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è')

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = '—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞'
        verbose_name_plural = '—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏'


class SpecValue(models.Model):
    """–ú–æ–¥–µ–ª—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ó–ù–ê–ß–ï–ù–ò–ï"""
    value = models.CharField(max_length=200, verbose_name='–ó–Ω–∞—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏')
    spec = models.ForeignKey(Spec, on_delete=models.CASCADE, related_name='spec_values', verbose_name='–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞')
    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='products', verbose_name='–ü—Ä–æ–¥—É–∫—Ç')

    def __str__(self):
        return self.spec.title

    class Meta:
        verbose_name = '–∑–Ω–∞—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏'
        verbose_name_plural = '–∑–Ω–∞—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫'


class Series(models.Model):
    """–ú–æ–¥–µ–ª—å –¥–ª—è —Å–µ—Ä–∏–∏ –º–æ–¥–µ–ª–∏ –ø—Ä–æ–¥—É–∫—Ç–∞"""
    title = models.CharField(max_length=200, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–∏–∏')
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è')

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = '—Å–µ—Ä–∏—é'
        verbose_name_plural = '—Å–µ—Ä–∏–∏'


class Profile(models.Model):
    """–ú–æ–¥–µ–ª—å –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = models.OneToOneField(User, on_delete=models.CASCADE, verbose_name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
    avatar = models.ImageField(upload_to='avatars/', null=True, blank=True, verbose_name='–§–æ—Ç–æ')
    phone = models.CharField(max_length=30, null=True, blank=True, verbose_name='–¢–µ–ª–µ—Ñ–æ–Ω', default='–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    address = models.CharField(max_length=100, null=True, blank=True, verbose_name='–ê–¥—Ä–µ—Å (—É–ª. –¥–æ–º. –∫–≤.)',
                               default='–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    region = models.CharField(max_length=50, null=True, blank=True, verbose_name='–†–µ–≥–∏–æ–Ω', default='–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    city = models.CharField(max_length=50, null=True, blank=True, verbose_name='–ì–æ—Ä–æ–¥', default='–ù–µ —É–∫–∞–∑–∞–Ω–æ')

    def __str__(self):
        return self.user.username

    class Meta:
        verbose_name = '–ø—Ä–æ—Ñ–∏–ª—å'
        verbose_name_plural = '–ø—Ä–æ—Ñ–∏–ª–∏'


class FavoriteProduct(models.Model):
    """–ú–æ–¥–µ–ª—å –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user = models.ForeignKey(User, on_delete=models.CASCADE, verbose_name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
    product = models.ForeignKey(Product, on_delete=models.CASCADE, verbose_name='–ü—Ä–æ–¥—É–∫—Ç')
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è')

    def __str__(self):
        return f'{self.user.username} : {self.product.title}'

    class Meta:
        verbose_name = '–∏–∑–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç'
        verbose_name_plural = '–∏–∑–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã'


class Customer(models.Model):
    """–ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∑–∞–∫–∞–∑–∞"""
    user = models.OneToOneField(User, on_delete=models.SET_NULL, null=True, verbose_name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')

    def __str__(self):
        return self.user.username

    class Meta:
        verbose_name = '–ø–æ–∫—É–ø–∞—Ç–µ–ª—å'
        verbose_name_plural = '–ø–æ–∫—É–ø–∞—Ç–µ–ª–∏'


class Order(models.Model):
    """–ú–æ–¥–µ–ª—å –∑–∞–∫–∞–∑–∞"""
    customer = models.ForeignKey(Customer, on_delete=models.SET_NULL, null=True, verbose_name='–ü–æ–∫—É–ø–∞—Ç–µ–ª—å')
    is_completed = models.BooleanField(default=False, verbose_name='–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞')
    payment = models.BooleanField(default=False, verbose_name='–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã')  # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–ø–ª–∞—Ç—ã
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞')
    shipping = models.BooleanField(default=True, verbose_name='–î–æ—Å—Ç–∞–≤–∫–∞')  # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏

    def __str__(self):
        return f'{self.pk}: {self.customer.user.username}'

    class Meta:
        verbose_name = '–∑–∞–∫–∞–∑'
        verbose_name_plural = '–∑–∞–∫–∞–∑—ã'

    @property
    def get_order_total_price(self):
        """–í—ã–≤–æ–¥–∏–º –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –∑–∞–∫–∞–∑–µ"""
        order_products = self.product_orders.all()
        total_price = sum([i.get_total_price for i in order_products])
        return total_price

    @property
    def get_order_total_quantity(self):
        """–í—ã–≤–æ–¥–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∑–∞–∫–∞–∑–µ"""
        order_products = self.product_orders.all()
        total_quantity = sum([i.quantity for i in order_products])
        return total_quantity


class ProductOrder(models.Model):
    """–ú–æ–¥–µ–ª—å —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ"""
    order = models.ForeignKey(Order, on_delete=models.SET_NULL, null=True, verbose_name='–ó–∞–∫–∞–∑',
                              related_name='product_orders')
    product = models.ForeignKey(Product, on_delete=models.SET_NULL, null=True, verbose_name='–ü—Ä–æ–¥—É–∫—Ç',
                                related_name='products_orders')
    quantity = models.IntegerField(default=0, verbose_name='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ')
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è')
    updated_at = models.DateTimeField(auto_now=True, verbose_name='–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è')

    def __str__(self):
        return f'–ó–∞–∫–∞–∑ {self.order.pk}: {self.product.title}'

    class Meta:
        verbose_name = '–∑–∞–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç'
        verbose_name_plural = '–∑–∞–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã'

    # –ú–µ—Å—Ç–æ –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ —Å–∫–∏–¥–∫–∏

    @property  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –≤–Ω–µ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä –≤ get_order_total_price
    def total_price(self):
        """–û–±—â–∞—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤"""
        return self.product.price * self.quantity

    @property
    def get_total_price(self):
        """–ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å —É—á—ë—Ç–æ–º —Å–∫–∏–¥–∫–∏"""
        if self.product.discount:
            discount_price = (self.product.price * self.product.discount) / 100
            self.product.price -= discount_price

        return self.product.price * self.quantity


class ShippingAddress(models.Model):
    """–ú–æ–¥–µ–ª—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞"""
    customer = models.ForeignKey(Customer, on_delete=models.SET_NULL, null=True, verbose_name='–ü–æ–∫—É–ø–∞—Ç–µ–ª—å')
    order = models.ForeignKey(Order, on_delete=models.SET_NULL, null=True, verbose_name='–ó–∞–∫–∞–∑')
    address = models.CharField(max_length=150, verbose_name='–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ (—É–ª. –¥–æ–º. –∫–≤.)')
    phone = models.CharField(max_length=30, verbose_name='–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è')
    region = models.ForeignKey('Region', on_delete=models.SET_NULL, null=True, verbose_name='–†–µ–≥–∏–æ–Ω')
    city = models.ForeignKey('City', on_delete=models.SET_NULL, null=True, verbose_name='–ì–æ—Ä–æ–¥')

    def __str__(self):
        return f'–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: {self.customer.user.username}: {self.address}'

    class Meta:
        verbose_name = '–∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏'
        verbose_name_plural = '–∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏'


class Region(models.Model):
    """–ú–æ–¥–µ–ª—å —Ä–µ–≥–∏–æ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏"""
    title = models.CharField(max_length=30, verbose_name='–†–µ–≥–∏–æ–Ω')

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = '—Ä–µ–≥–∏–æ–Ω'
        verbose_name_plural = '—Ä–µ–≥–∏–æ–Ω—ã'


class City(models.Model):
    """–ú–æ–¥–µ–ª—å –≥–æ—Ä–æ–¥–∞ –¥–æ—Å—Ç–∞–≤–∫–∏"""
    title = models.CharField(max_length=20, verbose_name='–ì–æ—Ä–æ–¥')
    region = models.ForeignKey(Region, on_delete=models.SET_NULL, null=True, verbose_name='–†–µ–≥–∏–æ–Ω', related_name='cities')

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = '–≥–æ—Ä–æ–¥'
        verbose_name_plural = '–≥–æ—Ä–æ–¥–∞'
